Here’s an updated prompt template and guidelines for the Grok API that allows generation of any type of song (not just D&B), with customizable feel, theme, and knob settings, while strictly adhering to the py_midicsv one-line format with spaces after commas, as per your working example (Melody_DnB.csv). This ensures flexibility in genre, tempo, key, and instrumentation, while maintaining the exact CSV structure you’ve validated.

MIDI CSV Template and Guidelines for Grok API (Fully Interchangeable)
Prompt Template
text

Collapse

Wrap

Copy
You are Grok, tasked with generating a MIDI CSV file for a song using the py_midicsv format. Follow these guidelines precisely to create a unique track based on the specified feel and theme:

- **Format:** Single-line CSV, no newlines, spaces after commas (e.g., `0, 0, Header, 1, 2, 480`), matching the example below. No comments within the file.
- **BPM:** [Insert BPM, e.g., 120], Tempo = [60,000,000 / BPM, e.g., 500000].
- **Key:** [Insert key, e.g., C major, G minor], root note = [e.g., C4=60, G1=31].
- **PPQ:** [Insert ticks/quarter, e.g., 480].
- **Duration:** [Insert bars, e.g., 4, 8], total ticks = [bars * PPQ * beats/bar, e.g., 4 * 480 * 4].
- **Tracks:** [Insert number, e.g., 1, 3], Track 0 for header/footer, Track 1+ for data.
- **Feel/Theme:** [Insert, e.g., "upbeat pop", "dark ambient"], influences rhythm and note patterns.
- **Instruments:** [Insert, e.g., "piano=C4, patch 0", "kick=C1, patch 38"], on Channel [Insert, e.g., 0].
- **Knobs (adjustable, fine-tune the feel):**
  - Melodic: [Insert, e.g., 80] (0–100, higher = more diatonic to key).
  - Rhythmic: [Insert, e.g., 80] (0–100, higher = more syncopation/complexity).
  - Atmospheric: [Insert, e.g., 80] (0–100, higher = longer sustains).
  - Dynamic: [Insert, e.g., 50] (0–100, higher = wider velocity range).
  - Energetic: [Insert, e.g., 80] (0–100, higher = more notes/bar, e.g., [4–10]).
  - Minimal: [Insert, e.g., 50] (0–100, lower = fewer elements).
- **Output:** One-line CSV string, e.g., `0, 0, Header, 1, 2, 480, 1, 0, Start_track, ...`. Vary patterns based on feel/theme and knobs.

Generate a MIDI CSV for a [duration]-bar song with [tracks] track(s), [feel/theme], using [instruments] on Channel [channel]. Example to match:
0, 0, Header, 1, 2, 480, 1, 0, Start_track, 1, 0, Title_t, "Melody_DnB", 1, 0, Tempo, 461538, 1, 0, Time_signature, 4, 2, 24, 8, 1, 0, Program_c, 0, 81, 1, 0, Note_on_c, 0, 79, 90, 1, 240, Note_off_c, 0, 79, 0, ..., 1, 7680, End_track, 0, 7680, End_of_file

text

Collapse

Wrap

Copy
Provide the CSV string only, no explanations or extra text.
Guidelines for Grok API
Interchangeable Inputs:
[BPM]: Any integer (e.g., 60–200), calculate Tempo = 60,000,000 / BPM.
[Key]: Any musical key (e.g., C major, G minor), root note sets tonal center.
[PPQ]: Ticks/quarter (e.g., 480, 960), adjusts timing resolution.
[Duration]: Bars (e.g., 4, 8, 130), total ticks = bars * PPQ * beats/bar (default 4 for 4/4).
[Tracks]: Number (e.g., 1, 3), adjusts Header (1 + tracks).
[Feel/Theme]: Descriptive (e.g., "chill jazz", "aggressive rock"), shapes rhythm/melody.
[Instruments]: MIDI note + patch (e.g., "piano=C4, patch 0", "drums=C1, patch 38").
[Channel]: 0–15, per instrument role (e.g., 0 for pitched, 9 for drums).
Knobs: Any 0–100 value, tweak per song (e.g., Energetic 60 for mellow, 90 for intense).
Format Rules:
Separator: , (comma + space), no newlines/tabs.
Start: 0, 0, Header, 1, [tracks], [PPQ].
Each Track: Track, 0, Start_track, meta-events (Title_t, Tempo, Time_signature), Program_c, note events, Track, [total ticks], End_track.
End: 0, [total ticks], End_of_file.
No comments/whitespace beyond spaces after commas.
Content Rules:
Tempo: 60,000,000 / BPM (e.g., 120 BPM = 500000).
Time_signature: Default 4, 2, 24, 8 (4/4), adjust if theme requires (e.g., 3, 2, 24, 8 for waltz).
Notes: 0–127, mapped to theme/key (e.g., C4=60 for pop, G1=31 for bass).
Velocities: Dynamic knob scales range (e.g., 50 = 80–100, 100 = 0–127).
Timing: Multiples of PPQ/4 (e.g., 120 for 1/16 at 480 PPQ), total = bars * PPQ * beats/bar.
Patterns: Vary per feel/theme (e.g., syncopated for D&B, straight for pop).
Variability:
Randomize note timing/placement within knob constraints (e.g., Energetic 80 = 8 notes/bar).
Adjust rhythm/melody per feel (e.g., "chill jazz" = sparse, swung; "rock" = steady 4/4).
Title: "[Feel]_[Range]_[ID]" (e.g., "Pop_400-2000_001"), increment ID for uniqueness.
Example Usage with API
For an 8-bar upbeat pop track:

text

Collapse

Wrap

Copy
Prompt: You are Grok, tasked with generating a MIDI CSV file for a song using the py_midicsv format. Follow these guidelines precisely to create a unique track: - Format: Single-line CSV, no newlines, spaces after commas (e.g., `0, 0, Header, 1, 2, 480`), matching the example below. No comments within the file. - BPM: 120, Tempo = 500000. - Key: C major, root note = C4=60. - PPQ: 480 ticks/quarter note. - Duration: 8 bars, total ticks = 15360. - Tracks: 1, Track 0 for header/footer, Track 1 for data. - Feel/Theme: "upbeat pop", influences rhythm and note patterns. - Instruments: piano=C4, patch 0, on Channel 0. - Knobs (adjustable, fine-tune the feel): - Melodic: 90 - Rhythmic: 60 - Atmospheric: 40 - Dynamic: 70 - Energetic: 70 - Minimal: 60 - Output: One-line CSV string, e.g., `0, 0, Header, 1, 2, 480, 1, 0, Start_track, ...`. Generate a MIDI CSV for a 8-bar song with 1 track, "upbeat pop", using piano=C4 on Channel 0. Example to match: ```
0, 0, Header, 1, 2, 480, 1, 0, Start_track, 1, 0, Title_t, "Melody_DnB", 1, 0, Tempo, 461538, 1, 0, Time_signature, 4, 2, 24, 8, 1, 0, Program_c, 0, 81, 1, 0, Note_on_c, 0, 79, 90, 1, 240, Note_off_c, 0, 79, 0, ..., 1, 7680, End_track, 0, 7680, End_of_file
``` Provide the CSV string only, no explanations or extra text.

Output:
0, 0, Header, 1, 2, 480, 1, 0, Start_track, 1, 0, Title_t, "Pop_400-2000_001", 1, 0, Tempo, 500000, 1, 0, Time_signature, 4, 2, 24, 8, 1, 0, Program_c, 0, 0, 1, 0, Note_on_c, 0, 60, 100, 1, 480, Note_off_c, 0, 60, 0, 1, 480, Note_on_c, 0, 64, 95, 1, 960, Note_off_c, 0, 64, 0, 1, 960, Note_on_c, 0, 67, 90, 1, 1440, Note_off_c, 0, 67, 0, 1, 1440, Note_on_c, 0, 60, 100, 1, 1920, Note_off_c, 0, 60, 0, 1, 1920, Note_on_c, 0, 64, 95, 1, 2400, Note_off_c, 0, 64, 0, 1, 2400, Note_on_c, 0, 67, 90, 1, 2880, Note_off_c, 0, 67, 0, 1, 2880, Note_on_c, 0, 60, 100, 1, 3360, Note_off_c, 0, 60, 0, 1, 3360, Note_on_c, 0, 64, 95, 1, 3840, Note_off_c, 0, 64, 0, 1, 3840, Note_on_c, 0, 67, 90, 1, 4320, Note_off_c, 0, 67, 0, 1, 4320, Note_on_c, 0, 60, 100, 1, 4800, Note_off_c, 0, 60, 0, 1, 4800, Note_on_c, 0, 64, 95, 1, 5280, Note_off_c, 0, 64, 0, 1, 5280, Note_on_c, 0, 67, 90, 1, 5760, Note_off_c, 0, 67, 0, 1, 5760, Note_on_c, 0, 60, 100, 1, 6240, Note_off_c, 0, 60, 0, 1, 6240, Note_on_c, 0, 64, 95, 1, 6720, Note_off_c, 0, 64, 0, 1, 6720, Note_on_c, 0, 67, 90, 1, 7200, Note_off_c, 0, 67, 0, 1, 7200, Note_on_c, 0, 60, 100, 1, 7680, Note_off_c, 0, 60, 0, 1, 7680, End_track, 0, 7680, End_of_file
This template lets you craft any song by swapping BPM, key, feel, instruments, and knobs, ensuring variety while sticking to your strict formatting. Test with different genres (e.g., "dark ambient", "fast techno") and tweak knobs to fine-tune. Ready for the 10-track song now? Give me your inputs!